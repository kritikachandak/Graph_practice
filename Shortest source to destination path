// same as steps by knight just take care of the conditions given in the question

// { Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
// User function Template for C++

class Solution {
    
    bool isValid(int i, int j, int N, int M,vector<vector<bool>>&visited, vector<vector<int>> &A ){
        if(i>=0 && i<N && j>=0 && j<M && visited[i][j] == false && A[i][j] == 1){
            return true;
        }
        return false;
    }
  public:
    int shortestDistance(int N, int M, vector<vector<int>> A, int X, int Y) {
        // code here
        if(X>=N || Y>=M || A[0][0] == 0 || A[X][Y] == 0){
            return -1;
        }
        queue<pair<int,int>>q;
        q.push({0,0});
        vector<vector<bool>>visited(N, vector<bool>(M, false));
        visited[0][0] = true;
        int ans =0;
        
        while(!q.empty()){
            int size=q.size();
            ans++;
            while(size--){
                pair<int,int>p = q.front();
                q.pop();
                int xx = p.first;
                int yy = p.second;
                
                int ax[4] = {1,-1,0,0};
                int ay[4] = {0,0,1,-1};
                
                for(int i=0; i<4; i++){
                    int nx = xx + ax[i];
                    int ny = yy + ay[i];
                    
                    if(nx == X && ny == Y){
                        return ans;
                    }
                    
                    if(isValid(nx, ny, N, M, visited, A)){
                        visited[nx][ny] =true;
                        q.push({nx,ny});
                    }
                }
                
            }
        }
        return -1;
        
    }
};

// { Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int N, M, x, y;
        cin >> N >> M;
        vector<vector<int>> v(N, vector<int>(M));
        for (int i = 0; i < N; i++)
            for (int j = 0; j < M; j++) cin >> v[i][j];
        cin >> x >> y;
        Solution ob;
        cout << ob.shortestDistance(N, M, v, x, y) << "\n";
    }
}  // } Driver Code Ends
