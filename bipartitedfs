#include <bits/stdc++.h>
using namespace std;

class Solution{
    
    bool bipartite(int node, vector<int>&color, vector<int>adj[]){
        for(auto it: adj[node]){
            if(color[it]==-1)
                color[it] = 1-color[node];
                if(!bipartite(it,color,adj))
                   return false;
            else if(color[it] == color[node]){
                return false;
            }       
        }
        return true;
    }
    public:
    bool isbipartite(int n, vector<int>adj[]){
        vector<int>color(n+1,-1);
        for(int i=0; i<n; i++){
            if(color[i] == -1)
               color[i] =1;
               if(!bipartite(i, color, adj))
                   return false;
        }
        return true;
    }
};
int main() {
	int n,m;
	cin>>n>>m;
	int u,v;
	vector<int>adj[n+1];
	for(int i=0; i<m; i++){
	    cin>>u>>v;
	    adj[u].push_back(v);
	}
	
	Solution obj;
	bool ans = obj.isbipartite(n,adj);
	if(ans){
	    cout<<"1\n";
	    
	}
	else{
	    cout<<"0\n";
	}
	
}
